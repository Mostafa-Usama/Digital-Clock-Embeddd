;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;void clock();
;void setclock();
;void timer();
;char keyfind();
;void display(int h,int m,int s);
;int hours();
;int mintues();
;int seconds();

	.DSEG
;void main(void)
; 0000 0021 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0022 
; 0000 0023 DDRC.0 = 1;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 0024 PORTC.0 = 0;
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0025 DDRD.0 = 0;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0026 DDRD.3 = 0;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0027 PORTD.0 = 1;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0028 PORTD.3 = 1;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0029 
; 0000 002A lcd_init(20);
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 002B while (1)
;PCODE: $0000001C VOL: 0
; 0000 002C {
; 0000 002D 
; 0000 002E 
; 0000 002F lcd_clear();
;PCODE: $0000001D VOL: 0
; 0000 0030 lcd_puts("1:Stopwatch");
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0031 lcd_gotoxy(0,1);
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0032 lcd_puts("2:Timer");
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0033 lcd_gotoxy(0,2);
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0034 lcd_puts("3:CLOCK");
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0035 input = keyfind();
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0036 lcd_putchar(input);
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0037 if(input == '1'){
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0038 lcd_clear();
;PCODE: $00000036 VOL: 0
; 0000 0039 hour = hours();
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 003A delay_ms(1000);
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 003B lcd_clear();
;PCODE: $0000003B VOL: 0
; 0000 003C mintue = mintues();
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 003D if(mintue>59){
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 003E delay_ms(1000);
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 003F lcd_clear();
;PCODE: $00000043 VOL: 0
; 0000 0040 lcd_puts("Invalid input");
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0041 delay_ms(1000);
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0042 lcd_clear();
;PCODE: $00000049 VOL: 0
; 0000 0043 }
; 0000 0044 else {
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0045 delay_ms(1000);
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0046 lcd_clear();
;PCODE: $0000004E VOL: 0
; 0000 0047 second = seconds();
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 0048 delay_ms(1000);
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0049 
; 0000 004A if (second < 60){
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 004B lcd_clear();
;PCODE: $00000056 VOL: 0
; 0000 004C 
; 0000 004D clock();
;PCODE: $00000057 VOL: 0
; 0000 004E lcd_clear();
;PCODE: $00000058 VOL: 0
; 0000 004F }
; 0000 0050 else {
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 0051 lcd_clear();
;PCODE: $0000005B VOL: 0
; 0000 0052 lcd_puts("Invalid input");
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 0053 delay_ms(1000);
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 0054 }
;PCODE: $00000061 VOL: 0
; 0000 0055 }
;PCODE: $00000062 VOL: 0
; 0000 0056 }
; 0000 0057 
; 0000 0058 if (input == '2')
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 0059 {   lcd_clear();
;PCODE: $00000067 VOL: 0
; 0000 005A timer();
;PCODE: $00000068 VOL: 0
; 0000 005B }
; 0000 005C 
; 0000 005D if (input == '3')
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 005E {   lcd_clear();
;PCODE: $0000006D VOL: 0
; 0000 005F setclock();
;PCODE: $0000006E VOL: 0
; 0000 0060 }
; 0000 0061 
; 0000 0062 }
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 0063 
; 0000 0064 }
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0

	.DSEG
_0x13:
	.BYTE 0x38
;char keyfind()
; 0000 0066 {

	.CSEG
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 0067 while(1)
;PCODE: $00000077 VOL: 0
; 0000 0068 {
; 0000 0069 KEY_DDR = 0x0F; // set port direction as input-output
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 006A KEY_PRT = 0xF0;
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 006B do
;PCODE: $0000007C VOL: 0
; 0000 006C {
; 0000 006D delay_ms(20); /* 20ms key debounce time */
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 006E colloc = (KEY_PIN & 0xF0); /* read status of column */
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 006F }while(colloc == 0xF0); /* check for any key press */
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 0070 delay_ms(100); /* 100ms key debounce time */
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 0071 /* now check for rows */
; 0000 0072 KEY_PRT = 0xFE; // check for pressed key in 1st row
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 0073 colloc = (KEY_PIN & 0xF0);
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 0074 if(colloc != 0xF0)
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 0075 {
; 0000 0076 rowloc = 0;
;PCODE: $00000094 VOL: 0
; 0000 0077 break;
;PCODE: $00000095 VOL: 0
; 0000 0078 }
; 0000 0079 KEY_PRT = 0xFD; // check for pressed key in 2nd row
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 007A colloc = (KEY_PIN & 0xF0);
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 007B if(colloc != 0xF0)
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0000 007C {
; 0000 007D rowloc = 1;
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 007E break;
;PCODE: $000000A1 VOL: 0
; 0000 007F }
; 0000 0080 KEY_PRT = 0xFB; // check for pressed key in 3rd row
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 0081 colloc = (KEY_PIN & 0xF0);
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 0082 if(colloc != 0xF0)
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 0083 {
; 0000 0084 rowloc = 2;
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 0085 break;
;PCODE: $000000AD VOL: 0
; 0000 0086 }KEY_PRT = 0xF7; /* check for pressed key in 4th row */
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 0087 colloc = (KEY_PIN & 0xF0);
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
; 0000 0088 if(colloc != 0xF0)
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
; 0000 0089 {
; 0000 008A rowloc = 3;
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
; 0000 008B break;
;PCODE: $000000B9 VOL: 0
; 0000 008C }
; 0000 008D }
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
; 0000 008E if(colloc == 0xE0)
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
; 0000 008F return(keypad[rowloc][0]);
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
; 0000 0090 else if(colloc == 0xD0)
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
; 0000 0091 return(keypad[rowloc][1]);
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
; 0000 0092 else if(colloc == 0xB0)
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
; 0000 0093 return(keypad[rowloc][2]);
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
; 0000 0094 else
;PCODE: $000000DD VOL: 0
; 0000 0095 return(keypad[rowloc][3]);
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
; 0000 0096 }
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;int hours(){
; 0000 0099 int hours(){
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
; 0000 009A int hours;
; 0000 009B lcd_puts("Enter hours: ");
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;	hours -> R16,R17
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
; 0000 009C x = keyfind()-48;
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
; 0000 009D itoa(x,time);
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
; 0000 009E lcd_puts(time);
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
; 0000 009F y = keyfind()-48;
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
; 0000 00A0 itoa(y,time);
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
; 0000 00A1 lcd_puts(time);
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
; 0000 00A2 hours = x*10+y;
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
; 0000 00A3 return hours;
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
; 0000 00A4 }
;PCODE: $00000110 VOL: 0

	.DSEG
_0x2C:
	.BYTE 0xE
;int mintues(){
; 0000 00A6 int mintues(){

	.CSEG
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
; 0000 00A7 int mintues;
; 0000 00A8 lcd_puts("Enter mintues: ");
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;	mintues -> R16,R17
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
; 0000 00A9 x = keyfind()-48;
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
; 0000 00AA itoa(x,time);
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
; 0000 00AB lcd_puts(time);
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
; 0000 00AC y = keyfind()-48;
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
; 0000 00AD itoa(y,time);
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
; 0000 00AE lcd_puts(time);
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
; 0000 00AF mintues = x*10+y;
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
; 0000 00B0 
; 0000 00B1 
; 0000 00B2 return mintues;
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
; 0000 00B3 
; 0000 00B4 }
;PCODE: $00000137 VOL: 0

	.DSEG
_0x2D:
	.BYTE 0x10
;int seconds(){
; 0000 00B6 int seconds(){

	.CSEG
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
; 0000 00B7 int seconds;
; 0000 00B8 lcd_puts("Enter seconds: ");
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;	seconds -> R16,R17
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
; 0000 00B9 x = keyfind()-48;
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
; 0000 00BA itoa(x,time);
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
; 0000 00BB lcd_puts(time);
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
; 0000 00BC y = keyfind()-48;
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
; 0000 00BD itoa(y,time);
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
; 0000 00BE lcd_puts(time);
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
; 0000 00BF seconds = x*10+y;
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
; 0000 00C0 
; 0000 00C1 
; 0000 00C2 
; 0000 00C3 return seconds;
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
; 0000 00C4 
; 0000 00C5 }
;PCODE: $0000015E VOL: 0

	.DSEG
_0x2E:
	.BYTE 0x10
;void display(int h, int m, int s){
; 0000 00C6 void display(int h, int m, int s){

	.CSEG
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
; 0000 00C7 
; 0000 00C8 lcd_clear();
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;	h -> R20,R21
;	m -> R18,R19
;	s -> R16,R17
;PCODE: $00000167 VOL: 0
; 0000 00C9 itoa(h,time);
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
; 0000 00CA lcd_puts(time);
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
; 0000 00CB lcd_puts(":");
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
; 0000 00CC 
; 0000 00CD itoa(m,time);
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
; 0000 00CE lcd_puts(time);
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
; 0000 00CF lcd_puts(":");
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
; 0000 00D0 
; 0000 00D1 itoa(s,time);
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
; 0000 00D2 lcd_puts(time);
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
; 0000 00D3 }
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0

	.DSEG
_0x2F:
	.BYTE 0x4
;void clock(){
; 0000 00D5 void clock(){

	.CSEG
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
; 0000 00D6 int i,j,k;
; 0000 00D7 int check = 0;
; 0000 00D8 int checkk = 0;
; 0000 00D9 for (i = hour; i >= 0; i--){
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;	i -> R16,R17
;	j -> R18,R19
;	k -> R20,R21
;	check -> Y+8
;	checkk -> Y+6
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
; 0000 00DA if (checkk == 1){
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
; 0000 00DB for(j = 59; j >= 0; j--){
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
; 0000 00DC if(check == 1){
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
; 0000 00DD 
; 0000 00DE 
; 0000 00DF for (k = 59; k >= 0; k--){
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
; 0000 00E0 
; 0000 00E1 display(i,j,k);
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
; 0000 00E2 delay_ms(1000);
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
; 0000 00E3 }
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
; 0000 00E4 }
; 0000 00E5 else{
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
; 0000 00E6 check = 1;
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
; 0000 00E7 for (k = second; k >= 0; k--){
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
; 0000 00E8 if (PIND.0 == 0){
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
; 0000 00E9 return;
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
; 0000 00EA }
; 0000 00EB display(i,j,k);
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
; 0000 00EC delay_ms(1000);
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
; 0000 00ED }
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
; 0000 00EE }
;PCODE: $000001D4 VOL: 0
; 0000 00EF }
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
; 0000 00F0 }
; 0000 00F1 else {
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
; 0000 00F2 checkk = 1;
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
; 0000 00F3 for(j = mintue; j >= 0; j--){
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
; 0000 00F4 if(check == 1){
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
; 0000 00F5 
; 0000 00F6 
; 0000 00F7 for (k = 59; k >= 0; k--){
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
; 0000 00F8 display(i,j,k);
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
; 0000 00F9 delay_ms(1000);
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
; 0000 00FA }
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
; 0000 00FB }
; 0000 00FC else{
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
; 0000 00FD check = 1;
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
; 0000 00FE for (k = second; k >= 0; k--){
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
; 0000 00FF if (PIND.0 == 0){
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
; 0000 0100 return;
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
; 0000 0101 }
; 0000 0102 display(i,j,k);
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
; 0000 0103 delay_ms(1000);
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
; 0000 0104 }
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
; 0000 0105 }
;PCODE: $0000021A VOL: 0
; 0000 0106 
; 0000 0107 }
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
; 0000 0108 }
;PCODE: $00000220 VOL: 0
; 0000 0109 
; 0000 010A 
; 0000 010B }
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
; 0000 010C lcd_gotoxy(0,1);
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
; 0000 010D lcd_puts("Time up!!");
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
; 0000 010E PORTC.0 = 1;
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
; 0000 010F delay_ms(2000);
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
; 0000 0110 PORTC.0 = 0;
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
; 0000 0111 lcd_clear();
;PCODE: $00000233 VOL: 0
; 0000 0112 
; 0000 0113 }
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0

	.DSEG
_0x4D:
	.BYTE 0xA
;void timer(){
; 0000 0116 void timer(){

	.CSEG
;PCODE: $00000238 VOL: 0
;PCODE: $00000239 VOL: 0
; 0000 0117 
; 0000 0118 int i,j,k;
; 0000 0119 
; 0000 011A for (i = 0; i <= 24; i++){
;PCODE: $0000023A VOL: 0
;	i -> R16,R17
;	j -> R18,R19
;	k -> R20,R21
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
; 0000 011B 
; 0000 011C for(j = 0; j < 60 ; j++){
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
;PCODE: $0000024C VOL: 0
; 0000 011D 
; 0000 011E for (k = 0; k < 60; k++){
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
; 0000 011F if (PIND.0 == 0){
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
;PCODE: $00000258 VOL: 0
; 0000 0120 lcd_clear();
;PCODE: $00000259 VOL: 0
; 0000 0121 return;
;PCODE: $0000025A VOL: 0
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
; 0000 0122 }
; 0000 0123 if (PIND.3 == 0){
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
;PCODE: $00000260 VOL: 0
; 0000 0124 delay_ms(1300);
;PCODE: $00000261 VOL: 0
;PCODE: $00000262 VOL: 0
; 0000 0125 
; 0000 0126 while(1){
;PCODE: $00000263 VOL: 0
; 0000 0127 if(PIND.3==0){
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
;PCODE: $00000266 VOL: 0
; 0000 0128 delay_ms(100);
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
; 0000 0129 break;  }
;PCODE: $0000026A VOL: 0
; 0000 012A if (PIND.0 == 0){
;PCODE: $0000026B VOL: 0
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
; 0000 012B lcd_clear();
;PCODE: $0000026F VOL: 0
; 0000 012C return;
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
;PCODE: $00000272 VOL: 0
; 0000 012D }
; 0000 012E 
; 0000 012F }
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
; 0000 0130 
; 0000 0131 
; 0000 0132 
; 0000 0133 }
; 0000 0134 display(i,j,k);
;PCODE: $00000276 VOL: 0
;PCODE: $00000277 VOL: 0
;PCODE: $00000278 VOL: 0
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
; 0000 0135 delay_ms(1000);
;PCODE: $0000027B VOL: 0
;PCODE: $0000027C VOL: 0
; 0000 0136 }
;PCODE: $0000027D VOL: 0
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
;PCODE: $00000281 VOL: 0
; 0000 0137 }
;PCODE: $00000282 VOL: 0
;PCODE: $00000283 VOL: 0
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
; 0000 0138 }
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
;PCODE: $0000028B VOL: 0
; 0000 0139 }
;PCODE: $0000028C VOL: 0
;PCODE: $0000028D VOL: 0
;PCODE: $0000028E VOL: 0
;PCODE: $0000028F VOL: 0
;void setclock(){
; 0000 013B void setclock(){
;PCODE: $00000290 VOL: 0
;PCODE: $00000291 VOL: 0
; 0000 013C int i,j,k,h,m,s;
; 0000 013D h=hours();
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
;	i -> R16,R17
;	j -> R18,R19
;	k -> R20,R21
;	h -> Y+10
;	m -> Y+8
;	s -> Y+6
;PCODE: $00000294 VOL: 0
;PCODE: $00000295 VOL: 0
; 0000 013E delay_ms(1000);
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
; 0000 013F lcd_clear();
;PCODE: $00000298 VOL: 0
; 0000 0140 m=mintues();
;PCODE: $00000299 VOL: 0
;PCODE: $0000029A VOL: 0
; 0000 0141 delay_ms(1000);
;PCODE: $0000029B VOL: 0
;PCODE: $0000029C VOL: 0
; 0000 0142 lcd_clear();
;PCODE: $0000029D VOL: 0
; 0000 0143 s=seconds();
;PCODE: $0000029E VOL: 0
;PCODE: $0000029F VOL: 0
; 0000 0144 delay_ms(1000);
;PCODE: $000002A0 VOL: 0
;PCODE: $000002A1 VOL: 0
; 0000 0145 lcd_clear();
;PCODE: $000002A2 VOL: 0
; 0000 0146 if(h>23||m>59||s>59){
;PCODE: $000002A3 VOL: 0
;PCODE: $000002A4 VOL: 0
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
;PCODE: $000002A9 VOL: 0
;PCODE: $000002AA VOL: 0
;PCODE: $000002AB VOL: 0
;PCODE: $000002AC VOL: 0
;PCODE: $000002AD VOL: 0
; 0000 0147 lcd_puts("Invalid input");
;PCODE: $000002AE VOL: 0
;PCODE: $000002AF VOL: 0
;PCODE: $000002B0 VOL: 0
; 0000 0148 delay_ms(2000);
;PCODE: $000002B1 VOL: 0
;PCODE: $000002B2 VOL: 0
; 0000 0149 }
; 0000 014A for (i = h; i < 24; i++){
;PCODE: $000002B3 VOL: 0
;PCODE: $000002B4 VOL: 0
;PCODE: $000002B5 VOL: 0
;PCODE: $000002B6 VOL: 0
;PCODE: $000002B7 VOL: 0
;PCODE: $000002B8 VOL: 0
;PCODE: $000002B9 VOL: 0
;PCODE: $000002BA VOL: 0
;PCODE: $000002BB VOL: 0
;PCODE: $000002BC VOL: 0
; 0000 014B 
; 0000 014C for(j = m; j < 60 ; j++){
;PCODE: $000002BD VOL: 0
;PCODE: $000002BE VOL: 0
;PCODE: $000002BF VOL: 0
;PCODE: $000002C0 VOL: 0
;PCODE: $000002C1 VOL: 0
;PCODE: $000002C2 VOL: 0
;PCODE: $000002C3 VOL: 0
;PCODE: $000002C4 VOL: 0
;PCODE: $000002C5 VOL: 0
; 0000 014D 
; 0000 014E for (k = s; k < 60; k++){
;PCODE: $000002C6 VOL: 0
;PCODE: $000002C7 VOL: 0
;PCODE: $000002C8 VOL: 0
;PCODE: $000002C9 VOL: 0
;PCODE: $000002CA VOL: 0
;PCODE: $000002CB VOL: 0
;PCODE: $000002CC VOL: 0
;PCODE: $000002CD VOL: 0
;PCODE: $000002CE VOL: 0
; 0000 014F 
; 0000 0150 if (PIND.0 == 0){
;PCODE: $000002CF VOL: 0
;PCODE: $000002D0 VOL: 0
;PCODE: $000002D1 VOL: 0
; 0000 0151 lcd_clear();
;PCODE: $000002D2 VOL: 0
; 0000 0152 return;
;PCODE: $000002D3 VOL: 0
;PCODE: $000002D4 VOL: 0
;PCODE: $000002D5 VOL: 0
; 0000 0153 }
; 0000 0154 display(i,j,k);
;PCODE: $000002D6 VOL: 0
;PCODE: $000002D7 VOL: 0
;PCODE: $000002D8 VOL: 0
;PCODE: $000002D9 VOL: 0
;PCODE: $000002DA VOL: 0
; 0000 0155 delay_ms(1000);
;PCODE: $000002DB VOL: 0
;PCODE: $000002DC VOL: 0
; 0000 0156 
; 0000 0157 }
;PCODE: $000002DD VOL: 0
;PCODE: $000002DE VOL: 0
;PCODE: $000002DF VOL: 0
;PCODE: $000002E0 VOL: 0
;PCODE: $000002E1 VOL: 0
; 0000 0158 
; 0000 0159 }
;PCODE: $000002E2 VOL: 0
;PCODE: $000002E3 VOL: 0
;PCODE: $000002E4 VOL: 0
;PCODE: $000002E5 VOL: 0
;PCODE: $000002E6 VOL: 0
; 0000 015A 
; 0000 015B if(i==23&&j==60&&k==60){
;PCODE: $000002E7 VOL: 0
;PCODE: $000002E8 VOL: 0
;PCODE: $000002E9 VOL: 0
;PCODE: $000002EA VOL: 0
;PCODE: $000002EB VOL: 0
;PCODE: $000002EC VOL: 0
;PCODE: $000002ED VOL: 0
;PCODE: $000002EE VOL: 0
;PCODE: $000002EF VOL: 0
;PCODE: $000002F0 VOL: 0
;PCODE: $000002F1 VOL: 0
;PCODE: $000002F2 VOL: 0
;PCODE: $000002F3 VOL: 0
; 0000 015C i=-1;j=0;k=0;
;PCODE: $000002F4 VOL: 0
;PCODE: $000002F5 VOL: 0
;PCODE: $000002F6 VOL: 0
;PCODE: $000002F7 VOL: 0
;PCODE: $000002F8 VOL: 0
;PCODE: $000002F9 VOL: 0
; 0000 015D h=-1;m=0;s=0;
;PCODE: $000002FA VOL: 0
;PCODE: $000002FB VOL: 0
;PCODE: $000002FC VOL: 0
;PCODE: $000002FD VOL: 0
;PCODE: $000002FE VOL: 0
;PCODE: $000002FF VOL: 0
; 0000 015E }
; 0000 015F 
; 0000 0160 }
;PCODE: $00000300 VOL: 0
;PCODE: $00000301 VOL: 0
;PCODE: $00000302 VOL: 0
;PCODE: $00000303 VOL: 0
;PCODE: $00000304 VOL: 0
;PCODE: $00000305 VOL: 0
; 0000 0161 }
;PCODE: $00000306 VOL: 0
;PCODE: $00000307 VOL: 0
;PCODE: $00000308 VOL: 0
;PCODE: $00000309 VOL: 0

	.DSEG
_0x65:
	.BYTE 0xE
